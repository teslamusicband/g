# Создание пользователя MinIO с ограниченными правами доступа

## Предварительные требования
- Доступ к серверу OEL 9.4 с установленным MinIO client (mc)
- Логин и пароль администратора MinIO
- Доступ к кластеру MinIO

## Шаг 1: Установка MinIO Client (если не установлен)

```bash
# Скачивание mc client
curl https://dl.min.io/client/mc/release/linux-amd64/mc \
  --create-dirs \
  -o $HOME/minio-binaries/mc

# Назначение прав на выполнение
chmod +x $HOME/minio-binaries/mc

# Добавление в PATH (добавить в ~/.bashrc для постоянного использования)
export PATH=$PATH:$HOME/minio-binaries/
```

## Шаг 2: Настройка подключения к MinIO

```bash
# Добавление алиаса для подключения к кластеру MinIO
# Замените URL, ACCESS_KEY и SECRET_KEY на ваши данные администратора
mc alias set myminio https://your-minio-endpoint:9000 ADMIN_ACCESS_KEY ADMIN_SECRET_KEY

# Проверка подключения
mc admin info myminio
```

## Шаг 3: Создание пользователя

```bash
# Создание нового пользователя
# Замените username и password на нужные значения
mc admin user add myminio db_user_bucket123 SecurePassword123!

# Проверка создания пользователя
mc admin user list myminio
```

## Шаг 4: Создание политики доступа

```bash
# Создание файла политики
cat > bucket123-policy.json << 'EOF'
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::bucket123/*",
                "arn:aws:s3:::bucket123"
            ]
        }
    ]
}
EOF
```

## Шаг 5: Применение политики в MinIO

```bash
# Добавление политики в MinIO
mc admin policy create myminio bucket123-readonly-policy bucket123-policy.json

# Проверка создания политики
mc admin policy list myminio
```

## Шаг 6: Назначение политики пользователю

```bash
# Назначение политики пользователю
mc admin policy attach myminio bucket123-readonly-policy --user db_user_bucket123

# Проверка назначения политики
mc admin user info myminio db_user_bucket123
```

## Шаг 7: Создание бакета (если не существует)

```bash
# Создание бакета bucket123 (если он не существует)
mc mb myminio/bucket123

# Проверка существования бакета
mc ls myminio
```

## Шаг 8: Тестирование доступа

```bash
# Создание нового алиаса для тестового пользователя
mc alias set testuser https://your-minio-endpoint:9000 db_user_bucket123 SecurePassword123!

# Тест доступа к разрешенному бакету
mc ls testuser/bucket123

# Тест загрузки файла
echo "test content" > test.txt
mc cp test.txt testuser/bucket123/

# Тест отсутствия доступа к другим бакетам (должен вернуть ошибку)
mc ls testuser/
```

## Шаг 9: Проверка безопасности

```bash
# Проверка, что пользователь не может создавать новые бакеты
mc mb testuser/unauthorized-bucket

# Проверка, что пользователь не может получить доступ к другим бакетам
mc ls testuser/other-bucket
```

## Шаг 10: Очистка временных файлов

```bash
# Удаление временных файлов
rm bucket123-policy.json test.txt
```

## Важные замечания

1. **Замените переменные**: 
   - `https://your-minio-endpoint:9000` - на актуальный URL вашего MinIO
   - `ADMIN_ACCESS_KEY` и `ADMIN_SECRET_KEY` - на данные администратора
   - `db_user_bucket123` и `SecurePassword123!` - на нужные имя пользователя и пароль

2. **Безопасность**:
   - Используйте сложные пароли
   - Регулярно проверяйте права доступа
   - Ведите логи операций

3. **Политика доступа**: Созданная политика разрешает только:
   - Чтение объектов из bucket123
   - Запись объектов в bucket123
   - Удаление объектов из bucket123
   - Просмотр содержимого bucket123

4. **Проверка**: Обязательно протестируйте доступ перед использованием в продакшене

## Отзыв доступа (при необходимости)

```bash
# Отключение политики от пользователя
mc admin policy detach myminio bucket123-readonly-policy --user db_user_bucket123

# Удаление пользователя
mc admin user remove myminio db_user_bucket123

# Удаление политики
mc admin policy remove myminio bucket123-readonly-policy
```


Вот пошаговая инструкция для создания пользователя с ограниченными правами в MinIO через консоль bash на OEL 9.4:Инструкция готова! Основные моменты:

1. **Принцип минимальных привилегий**: Пользователь получает доступ только к бакету `bucket123` и может выполнять только операции чтения и записи данных.

2. **Политика безопасности**: JSON-политика строго ограничивает доступ только к указанному бакету с помощью ARN-ресурсов.

3. **Тестирование**: Включены шаги для проверки как разрешенных, так и запрещенных операций.

4. **Соответствие требованиям ИБ**: Пользователь не может создавать новые бакеты, получать доступ к другим бакетам или выполнять административные операции.

Не забудьте заменить все placeholder-значения (URL, логины, пароли) на ваши реальные данные перед выполнением команд.
