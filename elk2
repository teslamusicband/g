Создам подробную инструкцию по установке и настройке кластера Elasticsearch на Oracle Enterprise Linux 9.4 для двух серверов.Я создал подробную инструкцию по установке и настройке кластера Elasticsearch на Oracle Enterprise Linux 9.4. Инструкция включает все необходимые шаги:

**Ключевые особенности конфигурации:**
- Двухузловой кластер с репликацией данных
- Полная настройка безопасности с SSL/TLS сертификатами
- Оптимизация системных параметров для OEL 9.4
- Настройка файрвола и системных лимитов

**Основные этапы:**
1. Подготовка системы (Java, файрвол, лимиты)
2. Установка Elasticsearch из официального репозитория
3. Настройка кластера с правильной конфигурацией узлов
4. Генерация и установка SSL сертификатов
5. Запуск и проверка работоспособности
6. Настройка безопасности и пользователей

**Важные моменты:**
- Используется актуальная версия Elasticsearch 8.x
- Включена безопасность с аутентификацией
- Настроена межузловая SSL связь
- Оптимизированы JVM параметры

После выполнения всех шагов у вас будет рабочий кластер Elasticsearch с высокой доступностью и безопасностью. Не забудьте регулярно создавать резервные копии и мониторить состояние кластера.

######################

# Установка и настройка кластера Elasticsearch на Oracle Enterprise Linux 9.4

## Предварительные требования

### Системные требования
- **ОС**: Oracle Enterprise Linux 9.4
- **RAM**: минимум 4GB на узел (рекомендуется 8GB+)
- **CPU**: минимум 2 ядра на узел
- **Дисковое пространство**: минимум 50GB свободного места
- **Java**: OpenJDK 17 или выше

### Информация о серверах
Для примера будем использовать:
- **Сервер 1**: `es-node1` (IP: 192.168.1.10)
- **Сервер 2**: `es-node2` (IP: 192.168.1.11)

## Шаг 1: Подготовка системы (на обоих серверах)

### 1.1 Обновление системы
```bash
sudo dnf update -y
```

### 1.2 Установка Java 17
```bash
# Установка OpenJDK 17
sudo dnf install -y java-17-openjdk java-17-openjdk-devel

# Проверка установки
java -version
```

### 1.3 Настройка файрвола
```bash
# Открытие необходимых портов
sudo firewall-cmd --permanent --add-port=9200/tcp  # HTTP API
sudo firewall-cmd --permanent --add-port=9300/tcp  # Transport layer
sudo firewall-cmd --reload

# Проверка правил
sudo firewall-cmd --list-ports
```

### 1.4 Настройка системных лимитов
```bash
# Редактирование limits.conf
sudo tee -a /etc/security/limits.conf << EOF
elasticsearch soft nofile 65535
elasticsearch hard nofile 65535
elasticsearch soft nproc 4096
elasticsearch hard nproc 4096
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
EOF
```

### 1.5 Настройка sysctl
```bash
# Создание файла конфигурации
sudo tee /etc/sysctl.d/99-elasticsearch.conf << EOF
vm.max_map_count=262144
vm.swappiness=1
EOF

# Применение настроек
sudo sysctl -p /etc/sysctl.d/99-elasticsearch.conf
```

### 1.6 Отключение swap (рекомендуется)
```bash
# Временное отключение
sudo swapoff -a

# Постоянное отключение (комментирование строк swap в fstab)
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
```

## Шаг 2: Установка Elasticsearch (на обоих серверах)

### 2.1 Добавление репозитория Elastic
```bash
# Импорт GPG ключа
sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

# Создание файла репозитория
sudo tee /etc/yum.repos.d/elasticsearch.repo << EOF
[elasticsearch]
name=Elasticsearch repository for 8.x packages
baseurl=https://artifacts.elastic.co/packages/8.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=0
autorefresh=1
type=rpm-md
EOF
```

### 2.2 Установка Elasticsearch
```bash
# Установка последней версии 8.x
sudo dnf install --enablerepo=elasticsearch elasticsearch -y
```

### 2.3 Создание пользователя и настройка прав
```bash
# Создание пользователя elasticsearch (если не создан автоматически)
sudo useradd -r -m -s /bin/bash elasticsearch

# Настройка владельца директорий
sudo chown -R elasticsearch:elasticsearch /etc/elasticsearch
sudo chown -R elasticsearch:elasticsearch /var/lib/elasticsearch
sudo chown -R elasticsearch:elasticsearch /var/log/elasticsearch
```

## Шаг 3: Настройка кластера

### 3.1 Конфигурация первого узла (es-node1)

Создайте файл конфигурации `/etc/elasticsearch/elasticsearch.yml`:

```yaml
# ======================== Cluster Configuration ========================
cluster.name: my-elasticsearch-cluster
node.name: es-node1
node.roles: [master, data, ingest]

# ======================== Network Configuration ========================
network.host: 0.0.0.0
http.port: 9200
transport.port: 9300

# ======================== Discovery Configuration ========================
discovery.seed_hosts: ["192.168.1.10:9300", "192.168.1.11:9300"]
cluster.initial_master_nodes: ["es-node1", "es-node2"]

# ======================== Path Configuration ========================
path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch

# ======================== Memory Configuration ========================
bootstrap.memory_lock: true

# ======================== Security Configuration ========================
xpack.security.enabled: true
xpack.security.enrollment.enabled: true
xpack.security.http.ssl:
  enabled: true
  keystore.path: certs/http.p12
xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: certs/transport.p12
  truststore.path: certs/transport.p12

# ======================== Additional Settings ========================
action.destructive_requires_name: true
```

### 3.2 Конфигурация второго узла (es-node2)

Создайте файл конфигурации `/etc/elasticsearch/elasticsearch.yml`:

```yaml
# ======================== Cluster Configuration ========================
cluster.name: my-elasticsearch-cluster
node.name: es-node2
node.roles: [master, data, ingest]

# ======================== Network Configuration ========================
network.host: 0.0.0.0
http.port: 9200
transport.port: 9300

# ======================== Discovery Configuration ========================
discovery.seed_hosts: ["192.168.1.10:9300", "192.168.1.11:9300"]
cluster.initial_master_nodes: ["es-node1", "es-node2"]

# ======================== Path Configuration ========================
path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch

# ======================== Memory Configuration ========================
bootstrap.memory_lock: true

# ======================== Security Configuration ========================
xpack.security.enabled: true
xpack.security.enrollment.enabled: true
xpack.security.http.ssl:
  enabled: true
  keystore.path: certs/http.p12
xpack.security.transport.ssl:
  enabled: true
  verification_mode: certificate
  keystore.path: certs/transport.p12
  truststore.path: certs/transport.p12

# ======================== Additional Settings ========================
action.destructive_requires_name: true
```

### 3.3 Настройка JVM (на обоих серверах)

Отредактируйте файл `/etc/elasticsearch/jvm.options`:

```bash
# Для серверов с 8GB RAM установите:
-Xms4g
-Xmx4g

# Для серверов с 16GB RAM установите:
-Xms8g
-Xmx8g

# Добавьте дополнительные настройки
-XX:+UseG1GC
-XX:G1HeapRegionSize=32m
-XX:+DisableExplicitGC
```

## Шаг 4: Настройка безопасности

### 4.1 Генерация сертификатов (на первом узле)

```bash
# Переход в директорию Elasticsearch
cd /usr/share/elasticsearch

# Генерация CA сертификата
sudo bin/elasticsearch-certutil ca --pem --out /tmp/ca.zip
cd /tmp && sudo unzip ca.zip

# Создание конфигурационного файла для сертификатов
sudo tee instances.yml << EOF
instances:
  - name: es-node1
    dns:
      - es-node1
      - localhost
    ip:
      - 192.168.1.10
      - 127.0.0.1
  - name: es-node2
    dns:
      - es-node2
      - localhost
    ip:
      - 192.168.1.11
      - 127.0.0.1
EOF

# Генерация сертификатов для узлов
sudo /usr/share/elasticsearch/bin/elasticsearch-certutil cert \
  --ca-cert ca/ca.crt --ca-key ca/ca.key \
  --pem --in instances.yml --out certs.zip

# Распаковка сертификатов
sudo unzip certs.zip
```

### 4.2 Установка сертификатов (на первом узле)

```bash
# Создание директории для сертификатов
sudo mkdir -p /etc/elasticsearch/certs

# Копирование сертификатов для первого узла
sudo cp ca/ca.crt /etc/elasticsearch/certs/
sudo cp es-node1/es-node1.crt /etc/elasticsearch/certs/
sudo cp es-node1/es-node1.key /etc/elasticsearch/certs/

# Создание keystore файлов
sudo /usr/share/elasticsearch/bin/elasticsearch-keystore create
sudo /usr/share/elasticsearch/bin/elasticsearch-keystore add-file \
  xpack.security.transport.ssl.keystore.secure_password /dev/stdin <<< ""
sudo /usr/share/elasticsearch/bin/elasticsearch-keystore add-file \
  xpack.security.transport.ssl.truststore.secure_password /dev/stdin <<< ""

# Настройка прав доступа
sudo chown -R elasticsearch:elasticsearch /etc/elasticsearch/certs
sudo chmod -R 750 /etc/elasticsearch/certs
```

### 4.3 Копирование сертификатов на второй узел

```bash
# На первом узле упакуйте сертификаты для второго узла
sudo tar -czf es-node2-certs.tar.gz ca/ca.crt es-node2/es-node2.crt es-node2/es-node2.key

# Скопируйте архив на второй узел
scp es-node2-certs.tar.gz user@192.168.1.11:/tmp/

# На втором узле распакуйте и установите сертификаты
sudo mkdir -p /etc/elasticsearch/certs
cd /tmp && sudo tar -xzf es-node2-certs.tar.gz
sudo cp ca.crt /etc/elasticsearch/certs/
sudo cp es-node2.crt /etc/elasticsearch/certs/
sudo cp es-node2.key /etc/elasticsearch/certs/

# Создание keystore на втором узле
sudo /usr/share/elasticsearch/bin/elasticsearch-keystore create
sudo /usr/share/elasticsearch/bin/elasticsearch-keystore add-file \
  xpack.security.transport.ssl.keystore.secure_password /dev/stdin <<< ""
sudo /usr/share/elasticsearch/bin/elasticsearch-keystore add-file \
  xpack.security.transport.ssl.truststore.secure_password /dev/stdin <<< ""

# Настройка прав доступа
sudo chown -R elasticsearch:elasticsearch /etc/elasticsearch/certs
sudo chmod -R 750 /etc/elasticsearch/certs
```

## Шаг 5: Запуск кластера

### 5.1 Запуск службы (на обоих серверах)

```bash
# Включение и запуск службы
sudo systemctl daemon-reload
sudo systemctl enable elasticsearch
sudo systemctl start elasticsearch

# Проверка статуса
sudo systemctl status elasticsearch
```

### 5.2 Проверка логов

```bash
# Просмотр логов
sudo tail -f /var/log/elasticsearch/my-elasticsearch-cluster.log
```

## Шаг 6: Настройка паролей и безопасности

### 6.1 Сброс пароля пользователя elastic (на первом узле)

```bash
# Сброс пароля для встроенного пользователя elastic
sudo /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic
```

### 6.2 Создание дополнительных пользователей

```bash
# Создание пользователя для мониторинга
curl -X POST "localhost:9200/_security/user/monitoring_user" \
  -H "Content-Type: application/json" \
  -u elastic:your_password \
  -d '{
    "password": "monitoring_password",
    "roles": ["monitoring_user"],
    "full_name": "Monitoring User"
  }'
```

## Шаг 7: Проверка работоспособности кластера

### 7.1 Проверка состояния кластера

```bash
# Проверка здоровья кластера
curl -X GET "localhost:9200/_cluster/health?pretty" -u elastic:your_password

# Информация об узлах
curl -X GET "localhost:9200/_nodes?pretty" -u elastic:your_password

# Список индексов
curl -X GET "localhost:9200/_cat/indices?v" -u elastic:your_password
```

### 7.2 Создание тестового индекса

```bash
# Создание тестового индекса
curl -X PUT "localhost:9200/test-index" \
  -H "Content-Type: application/json" \
  -u elastic:your_password \
  -d '{
    "settings": {
      "number_of_shards": 2,
      "number_of_replicas": 1
    }
  }'

# Добавление тестового документа
curl -X POST "localhost:9200/test-index/_doc" \
  -H "Content-Type: application/json" \
  -u elastic:your_password \
  -d '{
    "message": "Hello Elasticsearch Cluster!",
    "timestamp": "2024-01-01T12:00:00"
  }'
```

## Шаг 8: Настройка мониторинга

### 8.1 Установка Kibana (опционально)

```bash
# Установка Kibana
sudo dnf install --enablerepo=elasticsearch kibana -y

# Базовая конфигурация Kibana
sudo tee /etc/kibana/kibana.yml << EOF
server.port: 5601
server.host: "0.0.0.0"
elasticsearch.hosts: ["https://192.168.1.10:9200", "https://192.168.1.11:9200"]
elasticsearch.username: "kibana_system"
elasticsearch.password: "kibana_password"
elasticsearch.ssl.verificationMode: certificate
EOF
```

## Устранение неисправностей

### Общие проблемы и решения

1. **Проблема с памятью**:
   ```bash
   # Проверка настроек памяти
   sudo systemctl edit elasticsearch
   # Добавить:
   [Service]
   LimitMEMLOCK=infinity
   ```

2. **Проблемы с сетью**:
   ```bash
   # Проверка доступности портов
   netstat -tlnp | grep 9200
   netstat -tlnp | grep 9300
   ```

3. **Проблемы с сертификатами**:
   ```bash
   # Проверка сертификатов
   sudo /usr/share/elasticsearch/bin/elasticsearch-certutil cert --help
   ```

### Команды для диагностики

```bash
# Проверка конфигурации
sudo /usr/share/elasticsearch/bin/elasticsearch --version

# Проверка логов
sudo journalctl -u elasticsearch -f

# Проверка процессов
ps aux | grep elasticsearch

# Проверка использования ресурсов
htop
```

## Рекомендации по эксплуатации

1. **Регулярное резервное копирование**:
   - Настройте снимки (snapshots) для резервного копирования данных
   - Используйте репозитории снимков на отдельном хранилище

2. **Мониторинг**:
   - Установите систему мониторинга (Prometheus + Grafana)
   - Настройте алерты для критических метрик

3. **Обновления**:
   - Планируйте регулярные обновления
   - Тестируйте обновления на тестовой среде

4. **Безопасность**:
   - Регулярно обновляйте пароли
   - Используйте RBAC для управления доступом
   - Настройте аудит безопасности

Кластер Elasticsearch готов к работе! Регулярно проверяйте его состояние и производительность.
